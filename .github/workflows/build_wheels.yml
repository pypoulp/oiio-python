name: Build

on:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.8 on macOS arm64
        if: runner.os == 'macOS' && matrix.os == 'macos-14'
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Set MACOSX_DEPLOYMENT_TARGET for macOS x86_64
        if: runner.os == 'macOS' && matrix.os == 'macos-13'
        run: echo "MACOSX_DEPLOYMENT_TARGET=10.13" >> $GITHUB_ENV

      - name: Set MACOSX_DEPLOYMENT_TARGET for macOS arm64
        if: runner.os == 'macOS' && matrix.os == 'macos-14'
        run: echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> $GITHUB_ENV

      - name: Force ARM build on macOS 14
        if: runner.os == 'macOS' && matrix.os == 'macos-14'
        run: |
          echo "CFLAGS=-arch arm64" >> $GITHUB_ENV
          echo "LDFLAGS=-arch arm64" >> $GITHUB_ENV
          echo "ARCHFLAGS=-arch arm64" >> $GITHUB_ENV
          echo "CIBW_ARCHS_MACOS=arm64" >> $GITHUB_ENV

      - name: Set environment for Intel builds on macOS 13
        if: runner.os == 'macOS' && matrix.os == 'macos-13'
        run: |
          echo "CFLAGS=-arch x86_64" >> $GITHUB_ENV
          echo "LDFLAGS=-arch x86_64" >> $GITHUB_ENV
          echo "ARCHFLAGS=-arch x86_64" >> $GITHUB_ENV
          echo "CIBW_ARCHS_MACOS=x86_64" >> $GITHUB_ENV

      - name: Set CIBW_PLATFORM for Windows
        if: runner.os == 'Windows'
        run: echo "CIBW_PLATFORM=windows" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          MACOSX_DEPLOYMENT_TARGET: ${{ env.MACOSX_DEPLOYMENT_TARGET }}
          CIBW_PLATFORM: ${{ env.CIBW_PLATFORM }}
          CFLAGS: ${{ env.CFLAGS || null }}
          LDFLAGS: ${{ env.LDFLAGS || null }}
          ARCHFLAGS: ${{ env.ARCHFLAGS || null }}
          CIBW_ARCHS_MACOS: ${{ env.CIBW_ARCHS_MACOS || null }}
        with:
          output-dir: wheelhouse
      
      - name: Debug REPAIR_LIBRARY
        if: runner.os == 'macOS'
        run: |
          echo "Contents of REPAIR_LIBRARY:"
          ls $PWD/oiio_python/libs
          file $PWD/oiio_python/libs/*.dylib

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
