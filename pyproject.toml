[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=64",
  "wheel",
  "conan==2.4.0",
  "numpy>=1.21.2,<2.0.0",
]

# =======================[ CIBUILDWHEEL ]======================

[tool.cibuildwheel]
build-frontend = {name = "build"}
skip = [
  "pp*", # Disable building PyPy wheels on all platforms
  "*-win32", # Skip 32-bit builds
  "*-manylinux_i686", # Skip 32-bit builds
]
test-command = "python {project}/test.py"
manylinux-x86_64-image = "quay.io/pypa/manylinux_2_28_x86_64"
manylinux-aarch64-image = "quay.io/pypa/manylinux_2_28_aarch64"
musllinux-x86_64-image = "quay.io/pypa/musllinux_1_2_x86_64"


[tool.cibuildwheel.macos]
before-all = [
  "brew install cmake",
  "python {project}/setuputils/build_dependencies.py",
]
repair-wheel-command = [
  "export REPAIR_LIBRARY=$PROJECT_ROOT/oiio_python/libs:$DYLD_LIBRARY_PATH",
  "DYLD_LIBRARY_PATH=$REPAIR_LIBRARY delocate-wheel -w {dest_dir} -v {wheel} -e \"$HOME/.conan2\"",
]

[tool.cibuildwheel.linux]
before-all = [
  "chmod +x {project}/setuputils/linux_before_all.sh",
  "bash {project}/setuputils/linux_before_all.sh",
  "python {project}/setuputils/build_dependencies.py",
]
repair-wheel-command = [
  "export LD_LIBRARY_PATH=/project/oiio_python/libs:$LD_LIBRARY_PATH",
  "auditwheel repair -w {dest_dir} {wheel}",
]

[tool.cibuildwheel.windows]
before-all = [
  "python {project}/setuputils/build_dependencies.py",
]