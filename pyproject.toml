[build-system]
requires = [
  "setuptools>=64",
  "setuptools-scm==8.1.0"
  "wheel",
  "conan==2.4.0",
  "numpy>=1.21.2,<2.0.0",
]build-backend = "setuptools.build_meta"


# =======================[ CIBUILDWHEEL ]======================

[tool.cibuildwheel]
build-frontend = {name = "build"}
skip = [
  "pp*", # Disable building PyPy wheels on all platforms
  "*-win32", # Skip 32-bit builds
  "*-manylinux_i686", # Skip 32-bit builds  # "cp38-macosx_arm64", # Skip building for Python 3.8 on Apple Silicon
]
test-command = "python {project}/test.py"

[tool.cibuildwheel.macos]
before-all = [
  "brew install cmake",
]
repair-wheel-command = [
  "export REPAIR_LIBRARY=$PROJECT_ROOT/oiio_python/libs:$DYLD_LIBRARY_PATH",
  "DYLD_LIBRARY_PATH=$REPAIR_LIBRARY delocate-wheel -w {dest_dir} -v {wheel} -e \"$HOME/.conan2\"",
]

[tool.cibuildwheel.linux]
before-all = [
  "chmod +x {project}/linux_before_all.sh",
  "bash {project}/linux_before_all.sh",
]
repair-wheel-command = [
  "export LD_LIBRARY_PATH=$PROJECT_ROOT/oiio_python/libs:$LD_LIBRARY_PATH",
  "auditwheel repair -w {dest_dir} {wheel}",
]

# ===========================[ BLACK ]========================

[tool.black]
line_length = 120

# ===========================[ ISORT ]========================

[tool.isort]
line_length = 120
profile = "black"

# ===========================[ PYLINT ]========================

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint.'MESSAGES CONTROL']
disable = [
  'missing-module-docstring',
  'missing-class-docstring',
  'missing-function-docstring',
  'line-too-long',
  'too-many-locals',
  'too-many-instance-attributes',
  'too-many-positional-arguments',
  'too-many-arguments',
  'too-few-public-methods',
  'too-many-branches',
  'duplicate-code',
  'fixme',
]
